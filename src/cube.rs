pub struct Cube {
    face: [[f32; 3]; 6],
}

pub const CUBE_VERTICES: [Cube; 6] = [
    // front (0, 0, 1.0)
    Cube {
        face: [
            [-1.0, -1.0, 1.0],
            [1.0, -1.0, 1.0],
            [-1.0, 1.0, 1.0],
            [-1.0, 1.0, 1.0],
            [1.0, -1.0, 1.0],
            [1.0, 1.0, 1.0],
        ],
    },
    // right (1.0, 0, 0)
    Cube {
        face: [
            [1.0, -1.0, 1.0],
            [1.0, -1.0, -1.0],
            [1.0, 1.0, 1.0],
            [1.0, 1.0, 1.0],
            [1.0, -1.0, -1.0],
            [1.0, 1.0, -1.0],
        ],
    },
    // back (0, 0, -1.0)
    Cube {
        face: [
            [1.0, -1.0, -1.0],
            [-1.0, -1.0, -1.0],
            [1.0, 1.0, -1.0],
            [1.0, 1.0, -1.0],
            [-1.0, -1.0, -1.0],
            [-1.0, 1.0, -1.0],
        ],
    },
    // left (-1.0, 0, 0)
    Cube {
        face: [
            [-1.0, -1.0, -1.0],
            [-1.0, -1.0, 1.0],
            [-1.0, 1.0, -1.0],
            [-1.0, 1.0, -1.0],
            [-1.0, -1.0, 1.0],
            [-1.0, 1.0, 1.0],
        ],
    },
    // top (0, 1.0, 0)
    Cube {
        face: [
            [-1.0, 1.0, 1.0],
            [1.0, 1.0, 1.0],
            [-1.0, 1.0, -1.0],
            [-1.0, 1.0, -1.0],
            [1.0, 1.0, 1.0],
            [1.0, 1.0, -1.0],
        ],
    },
    // bottom (0, -1.0, 0)
    Cube {
        face: [
            [-1.0, -1.0, -1.0],
            [1.0, -1.0, -1.0],
            [-1.0, -1.0, 1.0],
            [-1.0, -1.0, 1.0],
            [1.0, -1.0, -1.0],
            [1.0, -1.0, 1.0],
        ],
    },
];

pub fn cube_positions() -> Vec<[i8; 3]> {
    [].to_vec()
}
